<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

      <!-- jquery cdn -->
      <script
      src="https://code.jquery.com/jquery-3.6.0.min.js"
      integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
      crossorigin="anonymous">
    </script>
</head>
<body>
    <form name="visitor-form">
        <fieldset>
            <legend>방명록 등록</legend>
            <input type="text" id="name" placeholder="사용자 이름" /> <br />
            <input type="text" id="comment" placeholder="방명록" /> <br />
            
            <div id="button-group">
                <button type="button" onclick = "createVisitor();">등록</button>
            </div>
        </fieldset>
    </form>
    <br><br>
    <table border="1" cellspacing="0">
        <thead>
            <tr>
                <th>ID</th>
                <th>작성자</th>
                <th>방명록</th>
                <th>수정</th>
                <th>삭제</th>
            </tr>
        </thead>
        <tbody>
            <!-- data: db에서 가지고 오는 데이터 => 새고고침해도 데이터 남아있음-->
            <% for(let i = 0; i < data.length; i++) { %>
                <!-- 추가되어야할 tr 위치: 시작태그의 뒤(afterbegin) -->
                <tr id="tr_<%= data[i].id %>">
                    <td><%= data[i].id %></td>
                    <td><%= data[i].name %></td>
                    <td><%= data[i].comment %></td>
                    <td><button type="button" onclick="editVisitor('<%= data[i].id %>')">수정</button></td>
                    <td><button type="button" onclick="deleteVisitor(this, '<%= data[i].id %>')">삭제</button></td>
                </tr>
            <% } %>
            <!-- 추가되어야 할 tr 위치 => 종료 태그의 앞(Beforeend) -->
        </tbody>
        <!-- 추가되어야 할 Tr 위치 => 종료 태그의 앞(afterend) -->
    </table>

    <script>
        const tbody = document.querySelector('tbody');
        const buttonGroup = document.querySelector("#button-group");

        //폼 [등록] 버튼 클릭시 
        // - 테이블에 데이터 추가
        function createVisitor(){
            console.log("click 등록 버튼");

            //폼 선택
            const form = document.forms['visitor-form'];
            console.log(form);
            console.log(form.name.value);
            console.log(form.comment.value);

            if(!form.name.value.length){ //!0 -> !false -> true
                alert('이름 기입!');
                clearInput();
                return;
            }

            if(form.comment.value.length === 0){
                alert('방명록 기입');
                clearInput();
                return;
            }

            if(form.name.value.length > 10){
                alert('글자수에 맞게 입력해주세요');
                clearInput();
                return;
            }

            //name input value의 길이가 10글자 이하일 때,
            axios({
                method: 'POST',
                url: '/visitor/write',
                data: {
                    name: form.name.value,
                    comment: form.comment.value,
                }
            }).then((res) => {
                console.log(res);
                console.log(res.data);

                return res.data;
            }).then((data) => {
                console.log(data);// {id: 8, name: 'ㅁㅁ', comment: 'ㅁㅁ'}

                const html = `
                    <tr id="tr_${data.id}">
                        <td>${data.id}</td>
                        <td>${data.name}</td>
                        <td>${data.comment}</td>
                        <td><button type="button" onclick = "editVisitor('${data.id}')">수정</button></td>
                        <td><button type="button" onclick="deleteVisitor(this, '${data.id}');">삭제</button></td>
                    </tr>`;

                // 테이블에 추가된 정보를 "바로" 보여주기
                // data 객체에 담긴 값을 이용해서 tbody 태그의 자식으로 tr 한줄이 추가되는 코드
                // js: insertAdjacentHTML() -> 특정 요소에 html 코드 추가 가능
                // vs. innerHTML(): 기존 html 코드 지우고 덮어씌움
                // jquery: append()
                tbody.insertAdjacentHTML('beforeend', html); // ver.js
                // $('tbody').append(html); // ver. jquery
        
                clearInput();
            })
        } //function end


        //테이블 내 [수정] 버튼을 클릭시
        // -form input에 각각 이름과 방명록 값을 넣기
        //-[변경], [취소] 버튼으로 대체 -> innerHTML
        async function editVisitor(id){
            const form = document.forms['visitor-form'];
            console.log(form);
            console.log(id);

            const html = `
            <button type="button" onclick="editDo(${id});">변경</button>
            <button type="button" onclick="editCancel();">취소</button>
            `;
            buttonGroup.innerHTML = html;

            //-form input에 각각 이름과 방명록 값을 넣기
        
            //axios응답 결과를 result 변수에 담고자 한다.
            //왜냐하면 result변수에는 조회한 결과가 있다.
            //(result 변수에 한 명에 대한 정보가 담아야 하니까)
            //이 과정이 동기처리가 이루어져야 한다.
            //axios 처리를 기다렸다가 result 라는 변수에 담아야 한다(동기처리)
            //async/await
            //await를 만나서 프로미스가 처리될 때까지 기다려주게 한다.
            let result = await axios({
                method: 'GET',
                url: `/visitor/get?id=${id}`,
            }).then((res) => {
                console.log("!&!&!&!&!&");
                console.log("ejs에서의 RES: ", res);
                console.log("1: ", res.data);

                return res.data;
            })

            console.log('2: 방문자 하나 조회 결과: ' + result);
            //result : {id: 19, name: '123', comment: '123'}

            //폼의 Input에 "방문자 하나 조회 결과" 값을 각각 대입
            form.name.value = result.name;
            form.comment.value = result.comment;
        }

        function editDo(id){
            const form = document.forms['visitor-form'];

            axios({
                method: 'PATCH',
                url: '/visitor/edit',
                data: {
                    id: id,
                    name: form.name.value,
                    comment: form.comment.value,
                }
            }).then((res) => {
                console.log(res.data);

                return res.data;
            }).then((data) => {
                alert(data);

                const children = document.querySelector(`#tr_${id}`).children; 
                console.log("children >>",children);

                children[1].textContent = form.name.value; //value 값 넣어준다.
                children[2].textContent = form.comment.value; //comment value 값 넣어준다.
        
                //[취소] 버튼 클릭시와 동일한 동작
                //-input 초기화
                editCancel();

                const html = `
                     <button type="button" onclick = "createVisitor();">등록</button>
                `;
                buttonGroup.innerHTML = html;
            })
        }

        //[취소] 버튼 클릭시 
        //-input 초기화
        //-[등록] 버튼 보이기
        function editCancel(){
            console.log('deit cancel');
        
            //(1) input 초기화
            clearInput();
        
            //(2) 등록 버튼 보이기
            const html = `<button type="button" onclick = "createVisitor();">등록</button>`
            buttonGroup.innerHTML = html;
        }


        //[삭제] 버튼 클릭시
        //-테이블에서 해당 행 삭제
        function deleteVisitor(obj, id){
            console.log("click delete btn");

            console.log(obj); //삭제 버튼 태그
            console.log(id);

            let comfirm_alert = confirm("삭제하시겠습니까?");

            if(!comfirm_alert){
                return;
            }

            axios({
                method: 'DELETE',
                url: '/visitor/delete',
                data:{
                    id: id,
                }
            }).then((res) => {
                console.log(res.data);
                
                return res.data;
            }).then(data => {
                
                //obj: 삭제 버튼(자기자신)
                obj.parentElement.parentElement.remove();
            })
        }

        function clearInput(){
            const form = document.forms['visitor-form'];
            form.name.value = '';
            form.comment.value = '';
        }
        
    </script>
</body>
</html>